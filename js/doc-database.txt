===================
PATCH PROJECT TABLE
===================
All fields are strings. This table lists all included translation projects, but doesn’t detail the individual versions and patches released by the translation teams (this is the role of the second "patch version" table).
If you want to add a new translation that isn’t an more recent version of another one listed here, you will need to add a new entry in this table AND in the patch version table.

projectId (mandatory)
====================
Put any name to identify the translation project. This identifier is unique and will be referred to elsewhere. There is a naming convention, so even if it’s not absolutely needed, it would be better if you follow it for clarity and consistency. The convention is as follows: gameId (can be "m1", "m2", "m3" or "m12" to represent the game), dash, language code (two-letters, like "en" for English and "ja" for Japanese as specified by ISO 639-1). For example, "m12-pl" means "Mother 1+2 in Polish". An upper-case letter can be added to distinguish multiple translations made by different teams: "m2-esA" and "m2-esB" designate two different Spanish translation projects for Mother 2.
Please note the original games and official translations also need to have a projectId, so that the program can identify these ROMs as well.

game (mandatory)
================
The gameId for the relevant game: "m1", "m2", "m3" or "m12". They’ve been stored in JavaScript constants so you may want to use those identifiers instead: ID_MOTHER_1, ID_MOTHER_2, ID_MOTHER_3 and ID_MOTHER_1_2.

lang (mandatory)
================
Represents the language the game has been translated to. You need to use a language code as specified by ISO 639-1 because the program checks the user’s browser settings to automatically suggest them the corresponding translation. It’s generally a pair of two-letter strings, separated by a dash, to indicate the language and the country ("pt-BR" for Brazilian Portuguese). The country part allows us to display a flag in the UI in front of the corresponding language. Many languages codes are already stored as constants (LANG_JAPANESE, LANG_ENGLISH, LANG_FRENCH, etc.) so it’s better to use these identifiers. Please refer to consts.js. If the language you’re looking for is not listed there, please visit https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes to find the language code you’re looking for and add a constant to consts.js

latest (strongly recommended)
=============================
The version name or number (as a string) used by the translation team for the most recent version you’re including to Mother International. Can be any type of version number, like "1.0.2", "1.3+fix", or even the release date. Of course, you’ll have to respect the naming used by the translation team. If there’s only one version of this patch, you may omit to fill in this field, but it may lead to issues when a new version of this translation is released and added to Mother International. Also, please note the version number you put here allows the program to know which version to show first, so it also needs to be present for the relevant version in the other table, which lists all the included patch versions. Please make sure you wrote the exact same value in both tables.
Optionally, this field may also contain an array of strings, if you consider two or more versions are worth appearing in the list by default. In that case, the real latest version must be the first item in the array.

author (mandatory*)
===================
The name of the translation team, or alternatively, the project leader. Apart from the names themselves, please avoid putting English words in this field: the UI of Mother International is localized. Maybe just put a "&" for "and", or use the language of the associated translation. For the original games, we just specify that the author is "Nintendo".
* In the other table for the patch versions, there is also an author field that’s intended to override this one in the main UI if both of them are filled in. You have to fill in at least one of these two.

website (optional)
==================
The website URL for this translation project; the one that showcases it the best. Can be a page on romhacking.net or a forum post if nothing else was found. Must be entered as a full, absolute URL. If not filled in, the program will check the website field in the patch version table as well.

extraNote (optional)
====================
A short note you may want to add in case this translation is unconventional and has something specific about it. It may have a special flair to it, or be created with a specific intention. Or, it may be incomplete. But the field has to apply to all versions of the translation. So in most cases, it may be preferable to fill in the corresponding field in the patch version table instead.
Ideally, this field should be in the same language as the corresponding translation, because the UI of Mother International is localized as well and we can’t afford to add an extra note for every possible language.

isOfficial (optional)
=====================
A boolean field to indicate this is an official game. Like the English version of the first two games, or all the Japanese games. Treated as false if omitted.


===================
PATCH VERSION TABLE
===================
All supported versions of the games need to be listed here, which means, all the translations, but also the original, unpatched games. Of course we’re not putting the ROM files on the site, but they must be "known" by the system, and the associated patches still need to be available on the server.
Please keep the old versions present in this table. The program will only suggest the most recent ones by default, but it needs to be able to identify and update/translate an old ROM if the user inputs it. That’s the other purpose of this table.

crc (mandatory)
===============
The CRC32 checksum for the translated/associated ROM file (not the patch!). The program needs this field to identify the ROM in case it has been input by the user, and, in the other way around, to identify the ROM after the patching process. So, please be sure you wrote it right. You’ll have to write it in hexadecimal and as a string that starts with "0x".

projectId (mandatory)
=====================
The same projectId you’ve specified in the patch project table. It allows the program to link the translation project and the associated versions together.

patchId (mandatory)
===================
You’ll have to give a unique id to each included patches. The id can be any string, but it has to match the name (without extension) of the included patch file and the associated readme file on the server. For example, if patchId is "foo", the readme file must be named foo.txt, and the patch file must be named foo.ups, foo.zip, foo.ips or any other extension. There is a naming convention for the patchId as well: it starts with the projectId, to which you append an abbreviated form of the version number. For example, "m3-fr19" means "Mother 3 in French version 1.9".
You’ll need to specify a "patchId" for the original, unpatched game as well, even though there is no patch file associated to it. So maybe the name "patchId" isn’t the best choice for this field, but whatever.

patchExt (mandatory*)
=====================
The extension to the patch file. It allows the program to fetch the right patch file, by appending this extension to the patchId. The dot must be included. The program supports multiple patch formats and also zip files, but the patch format is automatically detected and it doesn’t rely on the extension to identify it.
* You don’t need to specify a patchExt field for the original, unpatched game because obviously there is no corresponding patch file on the server. But please consider that in our current database, the Japanese versions of MOTHER 1 and MOTHER 2 are treated technically as patched versions of the English games, because it allows the user to input any ROM, either English or Japanese (or other), and apply any patch to it. So don’t be surprised the Japanese versions still have a "patchExt".

baseRom (mandatory*)
====================
The ROM for which the patch file is made. Patch files that you’ll upload on the server are made to work with a specific ROM, that’s the one. But you won’t write any filename here. Instead, just specify the patchId that corresponds to that original, untranslated ROM, in this same table.
* Of course, if you didn’t specify a patchExt, you won’t have to specify a baseRom as well; please see above.

isOneWayOnly (mandatory*)
=========================
This program takes advantage of a special feature the UPS format has: the ability to apply patches in reverse, or, in other words, to "unpatch". That’s what allows the user to input just any ROM, already translated or not, that the program will then unpatch and re-patch into another language. If the patch file you’re including is not an UPS patch (and, as far as I know, only UPS patches can do that), then you’ll have to specify your patch is incompatible with the "unpatch" feature by setting this boolean field to true. Otherwise, you can omit it.

hasDoc (optional)
=================
This time, it must be a boolean, and the field will be interpreted as false if omitted. It specifies if this version of the translation includes a readme file. If included, the readme file must be a text file with the ".txt" extension, and it must be present in the "patches" folder. Its name must match the "patchId" field.

version (strongly recommended)
==============================
The version of the patch made by the translation team. Yeah, as a translator you can’t always get it perfectly right on the first try, so this table includes all versions and patches as opposed to the patch project table which lists the translation projects in general. The version field can be any string, but generally follows a 1.2 / 1.2.3 format.
You may omit this field if a translation only has one version, but just give it a good old "1.0" number for future-proofness.

author (optional*)
==================
It may happen that the author is different between two versions of a translation. That’s the purpose of this field. It overrides the author field in the project table when this specific version is shown in the UI, and it acts as a fallback in other cases. Please refer to the indications about English and how to fill in the auhtor field in the project table section above.
In case you didn’t specify an author for the project, you must specify an author here in the version table.

website (optional)
==================
In case there is a specific website for this version of the translation, that’s where you’ll put the URL. Also acts as a fallback for the project website if that one is omitted. Must be entered as a full, absolute URL.

extraNote (optional)
====================
A short note you may want to add for this version of the translation, in case there is something special to know about it. Typically, that’s where you can indicate that a MOTHER 1+2 translation only includes the MOTHER 1 part. If you specified a website for this version, just above, then the extraNote will act as the text for the link in the UI.
Ideally, this field should be in the same language as the corresponding translation, because the UI of Mother International is localized as well and we can’t afford to add an extra note for every possible language.

isSpecialHidden (optional)
==========================
Covers a very specific case. We included the support for ROMs that we wanted the program to recognize without displaying them in the list. That way, the user can use these ROMs as an input in order to patch them. For example, there are at least two known ROMs for the the EarthBound game: with headers, and without headers. The system has to support both of them. So for one of these two, this boolean field is set to true in order to hide it, just like older versions of translations but without the UI suggesting to update it.
